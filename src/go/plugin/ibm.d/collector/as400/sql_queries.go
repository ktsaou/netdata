// SPDX-License-Identifier: GPL-3.0-or-later

package as400

const (
	querySystemStatus = `
		SELECT 
			AVERAGE_CPU_UTILIZATION,
			SYSTEM_ASP_USED,
			ACTIVE_JOBS_IN_SYSTEM
		FROM QSYS2.SYSTEM_STATUS_INFO
	`

	queryMemoryPools = `
		SELECT 
			POOL_NAME,
			CURRENT_SIZE
		FROM QSYS2.MEMORY_POOL_INFO
		WHERE POOL_NAME IN ('*MACHINE', '*BASE', '*INTERACT', '*SPOOL')
	`

	queryDiskStatus = `
		SELECT 
			AVG(PERCENT_BUSY) as AVG_DISK_BUSY
		FROM QSYS2.DISK_STATUS
	`

	queryJobInfo = `
		SELECT 
			COUNT(*) as JOB_QUEUE_LENGTH
		FROM QSYS2.JOB_INFO
		WHERE JOB_STATUS = 'JOBQ'
	`

	queryDiskInstances = `
		SELECT 
			UNIT_NUMBER,
			UNIT_TYPE,
			UNIT_MODEL,
			PERCENT_BUSY,
			READ_REQUESTS,
			WRITE_REQUESTS,
			READ_BYTES,
			WRITE_BYTES,
			AVERAGE_REQUEST_TIME
		FROM QSYS2.DISK_STATUS
	`

	queryCountDisks = `
		SELECT COUNT(DISTINCT UNIT_NUMBER) as COUNT FROM QSYS2.DISK_STATUS
	`

	querySubsystemInstances = `
		SELECT 
			SUBSYSTEM_NAME,
			SUBSYSTEM_LIBRARY_NAME,
			STATUS,
			CURRENT_ACTIVE_JOBS,
			JOBS_IN_SUBSYSTEM_HELD,
			STORAGE_USED,
			SUBSYSTEM_POOL_ID,
			MAXIMUM_JOBS
		FROM QSYS2.SUBSYSTEM_INFO
		WHERE STATUS = 'ACTIVE'
	`

	queryCountSubsystems = `
		SELECT COUNT(*) as COUNT FROM QSYS2.SUBSYSTEM_INFO WHERE STATUS = 'ACTIVE'
	`

	queryJobQueueInstances = `
		SELECT 
			JOB_QUEUE_NAME,
			JOB_QUEUE_LIBRARY,
			JOB_QUEUE_STATUS,
			NUMBER_OF_JOBS,
			HELD_JOB_COUNT,
			SCHEDULED_JOB_COUNT,
			MAXIMUM_JOBS,
			SEQUENCE_NUMBER
		FROM QSYS2.JOB_QUEUE_INFO
	`

	queryCountJobQueues = `
		SELECT COUNT(*) as COUNT FROM QSYS2.JOB_QUEUE_INFO
	`

	queryJobTypeBreakdown = `
		SELECT 
			JOB_TYPE,
			COUNT(*) as COUNT
		FROM TABLE(QSYS2.ACTIVE_JOB_INFO()) X
		GROUP BY JOB_TYPE
	`

	queryIFSUsage = `
		SELECT 
			COUNT(*) as FILE_COUNT,
			SUM(DATA_SIZE) as TOTAL_SIZE,
			SUM(ALLOCATED_SIZE) as ALLOCATED_SIZE
		FROM TABLE(QSYS2.IFS_OBJECT_STATISTICS(
			START_PATH_NAME => '/',
			SUBTREE_DIRECTORIES => 'YES',
			OBJECT_TYPE_LIST => '*STMF'
		)) X
	`

	queryIFSTopNDirectories = `
		SELECT
			SUBSTRING(PATH_NAME, 1, LOCATE('/', PATH_NAME, 2) - 1) as DIR,
			SUM(OBJECT_SIZE) as TOTAL_SIZE
		FROM TABLE(QSYS2.IFS_OBJECT_STATISTICS(
			START_PATH_NAME => '%s',
			SUBTREE_DIRECTORIES => 'YES'
		)) AS T
		WHERE LOCATE('/', PATH_NAME, 2) > 0
		GROUP BY SUBSTRING(PATH_NAME, 1, LOCATE('/', PATH_NAME, 2) - 1)
		ORDER BY TOTAL_SIZE DESC
		FETCH FIRST %d ROWS ONLY
	`

	queryMessageQueues = `
		SELECT 
			MESSAGE_QUEUE_NAME,
			MESSAGE_QUEUE_LIBRARY,
			NUMBER_OF_MESSAGES
		FROM QSYS2.MESSAGE_QUEUE_INFO
		WHERE (MESSAGE_QUEUE_NAME = 'QSYSMSG' AND MESSAGE_QUEUE_LIBRARY = 'QSYS')
		   OR (MESSAGE_QUEUE_NAME = 'QSYSOPR' AND MESSAGE_QUEUE_LIBRARY = 'QSYS')
	`
)
