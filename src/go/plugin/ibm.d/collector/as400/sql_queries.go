// SPDX-License-Identifier: GPL-3.0-or-later

package as400

const (
	// Individual queries for SYSTEM_STATUS_INFO columns for better resilience
	// Core metrics that should always be available
	queryAverageCPU = `SELECT AVERAGE_CPU_UTILIZATION FROM QSYS2.SYSTEM_STATUS_INFO`
	querySystemASP  = `SELECT SYSTEM_ASP_USED FROM QSYS2.SYSTEM_STATUS_INFO`
	queryActiveJobs = `SELECT ACTIVE_JOBS_IN_SYSTEM FROM QSYS2.SYSTEM_STATUS_INFO`

	// Version-specific metrics (V7R3+)
	queryConfiguredCPUs            = `SELECT CONFIGURED_CPUS FROM QSYS2.SYSTEM_STATUS_INFO`
	queryCurrentProcessingCapacity = `SELECT CURRENT_PROCESSING_CAPACITY FROM QSYS2.SYSTEM_STATUS_INFO`
	querySharedProcessorPoolUtil   = `SELECT SHARED_PROCESSOR_POOL_UTILIZATION FROM QSYS2.SYSTEM_STATUS_INFO`
	queryPartitionCPUUtil          = `SELECT PARTITION_CPU_UTILIZATION FROM QSYS2.SYSTEM_STATUS_INFO`
	queryInteractiveCPUUtil        = `SELECT INTERACTIVE_CPU_UTILIZATION FROM QSYS2.SYSTEM_STATUS_INFO`
	queryDatabaseCPUUtil           = `SELECT DATABASE_CPU_UTILIZATION FROM QSYS2.SYSTEM_STATUS_INFO`

	// System information queries for labels
	querySystemName   = `SELECT SYSTEM_NAME FROM QSYS2.SYSTEM_STATUS_INFO`
	querySerialNumber = `SELECT SERIAL_NUMBER FROM QSYS2.SYSTEM_STATUS_INFO`
	querySystemModel  = `SELECT SYSTEM_MODEL FROM QSYS2.SYSTEM_STATUS_INFO`

	queryMemoryPools = `
		SELECT 
			POOL_NAME,
			CURRENT_SIZE,
			DEFINED_SIZE,
			RESERVED_SIZE,
			MAXIMUM_ACTIVE_THREADS,
			CURRENT_THREADS,
			CURRENT_INELIGIBLE_THREADS
		FROM QSYS2.MEMORY_POOL_INFO
		WHERE POOL_NAME IN ('*MACHINE', '*BASE', '*INTERACT', '*SPOOL')
	`

	queryDiskStatus = `
		SELECT 
			AVG(PERCENT_BUSY) as AVG_DISK_BUSY
		FROM QSYS2.DISK_STATUS
	`

	queryJobInfo = `
		SELECT 
			COUNT(*) as JOB_QUEUE_LENGTH
		FROM QSYS2.JOB_INFO
		WHERE JOB_STATUS = 'JOBQ'
	`

	queryDiskInstances = `
		SELECT 
			UNIT_NUMBER,
			UNIT_TYPE,
			UNIT_MODEL,
			PERCENT_BUSY,
			READ_REQUESTS,
			WRITE_REQUESTS,
			READ_BYTES,
			WRITE_BYTES,
			AVERAGE_REQUEST_TIME
		FROM QSYS2.DISK_STATUS
	`

	queryCountDisks = `
		SELECT COUNT(DISTINCT UNIT_NUMBER) as COUNT FROM QSYS2.DISK_STATUS
	`

	querySubsystemInstances = `
		SELECT 
			SUBSYSTEM_NAME,
			SUBSYSTEM_LIBRARY_NAME,
			STATUS,
			CURRENT_ACTIVE_JOBS,
			JOBS_IN_SUBSYSTEM_HELD,
			STORAGE_USED,
			SUBSYSTEM_POOL_ID,
			MAXIMUM_JOBS
		FROM QSYS2.SUBSYSTEM_INFO
		WHERE STATUS = 'ACTIVE'
	`

	queryCountSubsystems = `
		SELECT COUNT(*) as COUNT FROM QSYS2.SUBSYSTEM_INFO WHERE STATUS = 'ACTIVE'
	`

	queryJobQueueInstances = `
		SELECT 
			JOB_QUEUE_NAME,
			JOB_QUEUE_LIBRARY,
			JOB_QUEUE_STATUS,
			NUMBER_OF_JOBS,
			HELD_JOB_COUNT,
			SCHEDULED_JOB_COUNT,
			MAXIMUM_JOBS,
			SEQUENCE_NUMBER
		FROM QSYS2.JOB_QUEUE_INFO
	`

	queryCountJobQueues = `
		SELECT COUNT(*) as COUNT FROM QSYS2.JOB_QUEUE_INFO
	`

	queryJobTypeBreakdown = `
		SELECT 
			JOB_TYPE,
			COUNT(*) as COUNT
		FROM TABLE(QSYS2.ACTIVE_JOB_INFO()) X
		GROUP BY JOB_TYPE
	`

	queryIFSUsage = `
		SELECT 
			COUNT(*) as FILE_COUNT,
			SUM(DATA_SIZE) as TOTAL_SIZE,
			SUM(ALLOCATED_SIZE) as ALLOCATED_SIZE
		FROM TABLE(QSYS2.IFS_OBJECT_STATISTICS(
			START_PATH_NAME => '/',
			SUBTREE_DIRECTORIES => 'YES',
			OBJECT_TYPE_LIST => '*STMF'
		)) X
	`

	queryIFSTopNDirectories = `
		SELECT
			SUBSTRING(PATH_NAME, 1, LOCATE('/', PATH_NAME, 2) - 1) as DIR,
			SUM(OBJECT_SIZE) as TOTAL_SIZE
		FROM TABLE(QSYS2.IFS_OBJECT_STATISTICS(
			START_PATH_NAME => '%s',
			SUBTREE_DIRECTORIES => 'YES'
		)) AS T
		WHERE LOCATE('/', PATH_NAME, 2) > 0
		GROUP BY SUBSTRING(PATH_NAME, 1, LOCATE('/', PATH_NAME, 2) - 1)
		ORDER BY TOTAL_SIZE DESC
		FETCH FIRST %d ROWS ONLY
	`

	queryMessageQueues = `
		SELECT 
			MESSAGE_QUEUE_NAME,
			MESSAGE_QUEUE_LIBRARY,
			NUMBER_OF_MESSAGES
		FROM QSYS2.MESSAGE_QUEUE_INFO
		WHERE (MESSAGE_QUEUE_NAME = 'QSYSMSG' AND MESSAGE_QUEUE_LIBRARY = 'QSYS')
		   OR (MESSAGE_QUEUE_NAME = 'QSYSOPR' AND MESSAGE_QUEUE_LIBRARY = 'QSYS')
	`

	// New enhanced queries
	queryActiveJobsDetails = `
		SELECT 
			JOB_NAME,
			JOB_TYPE,
			JOB_STATUS,
			CPU_TIME,
			TEMPORARY_STORAGE,
			JOB_ACTIVE_TIME,
			ELAPSED_CPU_PERCENTAGE,
			FUNCTION_TYPE,
			FUNCTION
		FROM TABLE(QSYS2.ACTIVE_JOB_INFO()) X
		WHERE CPU_TIME > 0
		ORDER BY CPU_TIME DESC
		FETCH FIRST %d ROWS ONLY
	`

	queryASPInfo = `
		SELECT 
			ASP_NUMBER,
			ASP_TYPE,
			TOTAL_CAPACITY_AVAILABLE,
			TOTAL_CAPACITY,
			STORAGE_THRESHOLD_PERCENTAGE,
			COMPRESSION_RECOVERY_POLICY,
			OVERFLOW_RECOVERY
		FROM QSYS2.ASP_INFO
	`

	queryMessageQueueCritical = `
		SELECT 
			MESSAGE_QUEUE_NAME,
			MESSAGE_QUEUE_LIBRARY,
			COUNT(*) as CRITICAL_COUNT
		FROM QSYS2.MESSAGE_QUEUE_INFO
		WHERE MESSAGE_SEVERITY >= 50
		  AND ((MESSAGE_QUEUE_NAME = 'QSYSMSG' AND MESSAGE_QUEUE_LIBRARY = 'QSYS')
		   OR (MESSAGE_QUEUE_NAME = 'QSYSOPR' AND MESSAGE_QUEUE_LIBRARY = 'QSYS'))
		GROUP BY MESSAGE_QUEUE_NAME, MESSAGE_QUEUE_LIBRARY
	`

	queryPartitionInfo = `
		SELECT 
			PARTITION_NAME,
			PARTITION_NUMBER,
			PARTITION_TYPE,
			CURRENT_PROCESSING_CAPACITY,
			SHARING_MODE,
			DEFINED_PROCESSING_CAPACITY,
			MINIMUM_PROCESSING_CAPACITY,
			MAXIMUM_PROCESSING_CAPACITY
		FROM QSYS2.SYSTEM_STATUS_INFO_BASIC
	`

	querySystemValues = `
		SELECT 
			SYSTEM_VALUE_NAME,
			CURRENT_NUMERIC_VALUE,
			CURRENT_CHARACTER_VALUE
		FROM QSYS2.SYSTEM_VALUE_INFO
		WHERE SYSTEM_VALUE_NAME IN (
			'QPFRADJ',     -- Performance adjustment
			'QMAXACTLVL',  -- Max activity level
			'QTOTJOB',     -- Total jobs
			'QACTJOB'      -- Active job threshold
		)
	`

	// Version detection queries
	queryIBMiVersion = `
		SELECT
			OS_VERSION,
			OS_RELEASE
		FROM QSYS2.SYSTEM_STATUS_INFO_BASIC
		FETCH FIRST 1 ROW ONLY
	`

	// Fallback for older systems
	queryIBMiVersionFallback = `
		SELECT
			'Unknown' AS OS_VERSION,
			'Unknown' AS OS_RELEASE
		FROM SYSIBM.SYSDUMMY1
	`

	// Feature detection queries
	queryCheckActiveJobInfo = `
		SELECT COUNT(*) AS CNT
		FROM QSYS2.SYSFUNCS
		WHERE SPECIFIC_SCHEMA = 'QSYS2'
		  AND ROUTINE_NAME = 'ACTIVE_JOB_INFO'
		  AND ROUTINE_TYPE = 'FUNCTION'
	`

	queryCheckIFSObjectStats = `
		SELECT COUNT(*) AS CNT
		FROM QSYS2.SYSFUNCS
		WHERE SPECIFIC_SCHEMA = 'QSYS2'
		  AND ROUTINE_NAME = 'IFS_OBJECT_STATISTICS'
		  AND ROUTINE_TYPE = 'FUNCTION'
	`
)
